apiVersion: apps/v1
kind: Deployment
metadata:
  name: '{{ .Release.Name }}-build-worker'
  labels:
    app.kubernetes.io/name:  build-worker
    app.kubernetes.io/component:  build-worker
    app.kubernetes.io/version: {{ .Chart.Version }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: build-worker
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/resource: deployment
  template:
    metadata:
      labels:
        app.kubernetes.io/component: build-worker
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/resource: deployment
    spec:
      {{- include "buildWorker.imagePullSecrets" . | nindent 6 }}
      {{- if .Values.buildWorker.podSecurityContext.enabled }}
      securityContext: {{- omit .Values.buildWorker.podSecurityContext "enabled" | toYaml | nindent 10 }}
      {{- end }}
      initContainers:
        - name: check-mongo
          image: {{ include "initContainer.image" . }}
          {{- if .Values.global.initContainerImage.containerSecurityContext.enabled }}
          securityContext: {{- omit .Values.global.initContainerImage.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          command:
            - sh
            - -c
            - |-
              OK=0
              echo "Checking mongo port"
              while [ $OK != 1 ]; do
                  echo -n "."
                  nc -z {{ template "url.mongo.isup" . }} 27017 2>&1 >/dev/null && OK=1 || sleep 1
              done
              echo
              echo "Done"
      {{- if .Values.buildWorker.resources }}
          resources: {{- toYaml .Values.buildWorker.resources | nindent 12 }}
      {{- end }}               
      containers:
        - name: build-worker
          image: {{ include "buildWorker.image" . }}
          {{- if .Values.buildWorker.containerSecurityContext.enabled }}
          securityContext: {{- omit .Values.buildWorker.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          livenessProbe:
            httpGet:
              path: /healthcheck
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 180
            timeoutSeconds: 10 # Defaults to 1
            periodSeconds: 30 # Defaults to 10
            failureThreshold: 3 # Defaults to 3
          envFrom:
            - configMapRef:
                name: '{{ .Release.Name }}-build-worker-cfg'
      {{- if .Values.buildWorker.resources }}
          resources: {{- toYaml .Values.buildWorker.resources | nindent 14 }}
      {{- end }}
    {{- with .Values.buildWorker.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.buildWorker.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.buildWorker.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}